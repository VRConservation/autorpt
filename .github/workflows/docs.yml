name: docs
on:
    push:
        branches:
            - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch full history for git revision dates
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.9
            - name: Setup Pages
              uses: actions/configure-pages@v4
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install .
            - name: Install docs dependencies
              run: |
                  # Install all required MkDocs dependencies
                  pip install mkdocs mkdocs-material>=9.1.3
                  pip install mkdocs-git-revision-date-plugin mkdocs-git-revision-date-localized-plugin
                  pip install mkdocs-jupyter>=0.24.0 mkdocstrings mkdocstrings-python-legacy
                  pip install pymdown-extensions
            - name: Set Jupyter platform dirs
              run: |
                  echo "JUPYTER_PLATFORM_DIRS=1" >> $GITHUB_ENV
            - name: Discover typos with codespell
              run: |
                  pip install codespell
                  codespell --skip="*.csv,*.geojson,*.json,*.js,*.html,*cff,./.git" --ignore-words-list="aci,acount,acounts,fallow,hart,hist,nd,ned,ois,wqs,watermask"
            - name: Run tests
              run: |
                  python -m unittest discover tests/
            - name: Build documentation
              run: |
                  python -m mkdocs build
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ./site

    # Deployment job
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
